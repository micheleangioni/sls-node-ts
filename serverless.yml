# service: ${file(package.json):name}
service: slsnode # for local development env name should be short

plugins:
  - serverless-deployment-bucket
  - serverless-plugin-typescript
  - serverless-localstack
  - serverless-offline

package:
  individually: false # use false for faster local development

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  tracing:
    apiGateway: false
    lambda: false
  region: 'eu-west-1'
  stage: ${opt:stage, 'development'}
  iamManagedPolicies:
    - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'secretsmanager:GetSecretValue'
      Resource: [
        "*"
      ]
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
        - dynamodb:ConditionCheckItem
      Resource:
        - "Fn::GetAtt": [ UserTable, Arn ]
    - Effect: 'Allow'
      Action:
        - sns:Publish
      Resource:
        !Ref SnsUserTopic
  environment:
    ENV: ${self:provider.stage}
    REGION: ${self:provider.region}
    SEND_DOMAIN_EVENTS: 'true'
    SLS_DEBUG: '*'
    UNDERLYING_CLIENT: 'awssns'
    USER_TABLE: !Ref UserTable # inject the User table name as env variable
  deploymentBucket:
    name: ${file(package.json):name}-bucket
    serverSideEncryption: AES256

custom:
  defaultStage: local
  serverless-offline:
    allowCache: true
  localstack:
    debug: true
    stages:
      - development
      - local
    autostart: false
    host: http://localhost
    edgePort: 4566
#  lambda:
#    # Enable this flag to improve performance
#    mountCode: True
  deploymentBucket:
    versioning: false

functions:
  graphql:
    handler: src/handler.enhancedGraphqlHandler
    events:
      - http:
          method: post
          path: graphql
          cors: true
#          authorizer: authorizerFunc # uncomment when deploying to AWS cloud
  getUsers:
    handler: src/handler.getUsers
    events:
      - http:
          method: get
          path: users
          cors: true
#          authorizer: authorizerFunc # uncomment when deploying to AWS cloud
#  authorizerFunc:
#    handler: src/handler.authorizer

resources:
  Resources:
    # DynamoDB
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        BillingMode: PAY_PER_REQUEST # pay on-demand, no resources provisioned
        AttributeDefinitions:
          - AttributeName: _id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: _id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: index_email
            Projection:
              ProjectionType: ALL
            KeySchema:
              - AttributeName: email
                KeyType: HASH
          - IndexName: index_username
            Projection:
              ProjectionType: ALL
            KeySchema:
              - AttributeName: username
                KeyType: HASH

    # SNS
    SnsUserTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: Domain Events of User Aggregate Topic
        TopicName: events_aggregate_user

    # API Gateway
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
