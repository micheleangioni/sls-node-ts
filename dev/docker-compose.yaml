version: '3.5'
services:
  mongosls:
    container_name: mongosls
    image: mongo:latest
    ports:
      - 27017:27017

  localstack:
    image: localstack/localstack:0.12.10
    ports:
      - "443:443"
      - "4566-4599:4566-4599"
      - "${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}"
    environment:
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY}
      - DEBUG=1
      - LAMBDA_EXECUTOR=docker
      - DATA_DIR=/tmp/localstack2
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LAMBDA_DOCKER_NETWORK=sls-node-ts
    volumes:
      - "${TMPDIR:-/tmp/localstack2}:/tmp/localstack2" # comment in macOS, see https://github.com/localstack/localstack/issues/2515
      - /var/run/docker.sock:/var/run/docker.sock

  # Let's create the needed AWS resources
  setup-resources:
    image: amazon/aws-cli:latest
    volumes:
      - ./dev_env:/project/dev_env
    environment:
      - AWS_ACCESS_KEY_ID=dummyaccess
      - AWS_SECRET_ACCESS_KEY=dummysecret
      - AWS_DEFAULT_REGION=eu-west-1
    entrypoint: /bin/sh -c
    command: >
      "
        sleep 50;
        aws sns create-topic --name events_aggregate_user --endpoint-url=http://localstack:4566;

      aws dynamodb create-table \
        --table-name Users \
        --attribute-definitions AttributeName=_id,AttributeType=S AttributeName=email,AttributeType=S AttributeName=username,AttributeType=S \
        --key-schema AttributeName=_id,KeyType=HASH \
        --billing-mode PAY_PER_REQUEST \
        --endpoint-url=http://localstack:4566 \
        --global-secondary-indexes \
                '[
                    {
                        \"IndexName\": \"index_email\",
                        \"KeySchema\": [
                            {\"AttributeName\":\"email\",\"KeyType\":\"HASH\"}
                        ],
                        \"Projection\": {\"ProjectionType\": \"ALL\"}
                    },
                    {
                        \"IndexName\": \"index_username\",
                        \"KeySchema\": [
                            {\"AttributeName\":\"username\",\"KeyType\":\"HASH\"}
                        ],
                        \"Projection\": {\"ProjectionType\": \"ALL\"}
                    }
                ]'
      "
    depends_on:
      - localstack

networks:
  default:
    external:
      name: sls-node-ts
